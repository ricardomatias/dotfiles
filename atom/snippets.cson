# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

# Processing
'.source.processing':
  'draw':
    'prefix': 'draw'
    'body': """
    void draw() {
      $1
    }
    """
  'width':
    'prefix': 'width'
    'body': 'width'
  'height':
    'prefix': 'height'
    'body': 'height'
  'for loop':
    'prefix': 'for'
    'body': """
    for (int $1 = $2; $1 < $3.length; $1 += 1) {
      $4
    }
    """
  'print':
    'prefix': 'println'
    'body': 'println($1);'

# Javascript
'.source.js':
  'window listener':
    'prefix': 'wae'
    'body': """
    window.addEventListener('$1', function(evt) {
      $2
    });
    """
  'anonymous function':
    'prefix': 'afn'
    'body': """
    function($1) {
      $2
    }
    """
  'beforeEach':
    'prefix': 'befr'
    'body': """
    beforeEach(function() {
      $1
    });
    """
  'beforeEach Inject':
    'prefix': 'ibefr'
    'body': """
    beforeEach(inject(function() {
      $1
    }));
    """
  'afterEach':
    'prefix': 'aftr'
    'body': """
    afterEach(function() {
      $1
    });
    """
